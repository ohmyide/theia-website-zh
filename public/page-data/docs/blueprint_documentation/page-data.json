{"componentChunkName":"component---src-templates-doc-js","path":"/docs/blueprint_documentation","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Packaging Theia as a Desktop Product"},"html":"<h1 id=\"打包-theia-桌面应用\" style=\"position:relative;\"><a href=\"#%E6%89%93%E5%8C%85-theia-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8\" aria-label=\"打包 theia 桌面应用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打包 Theia 桌面应用</h1>\n<p>将Theia打包成一个桌面产品</p>\n<p>Eclipse Theia Blueprint 作为产品案例，用于演示如何在 Theia 上构建桌面 IDE 产品，它集合了现有 Theia 功能和优秀扩展，我们提供 Theia Blueprint 的安装程序供下载（见以下链接）。在 git 仓库中，也可以找到 Theia Blueprint 及其安装包的源码。</p>\n<p>本文档将用此代码演示如何定制模板，以便你可以构建自己的 Theia 产品，包括安装程序和打包，从而在主流操作系统上安装桌面版产品。</p>\n<h2 id=\"构建产品和安装包\" style=\"position:relative;\"><a href=\"#%E6%9E%84%E5%BB%BA%E4%BA%A7%E5%93%81%E5%92%8C%E5%AE%89%E8%A3%85%E5%8C%85\" aria-label=\"构建产品和安装包 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>构建产品和安装包</h2>\n<p>Theia Blueprint 用 <a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder</a>打包的桌面应用，用 <a href=\"https://yarnpkg.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">yarn</a> 作为命令工具。\n需注意，通常只能用执行构建的操作系统上打包对应操作系统的产品，更多信息请参见 <a href=\"https://www.electron.build/multi-platform-build\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder的多平台构建文档</a>。</p>\n<p>以下命令可以从版本库的根目录中运行。</p>\n<p>安装依赖和构建，只需执行 <code class=\"language-text\">yarn</code>。</p>\n<p>也可以直接运行未打包的应用程序，例如：在开发过程中尝试用 <code class=\"language-text\">yarn electron start</code> 启动运行。</p>\n<p>用 <code class=\"language-text\">yarn electron package</code>，可以打包适用于当前操作系统的可执行文件。</p>\n<p>打包后的应用位于 <code class=\"language-text\">applications/electron/dist</code> 文件夹中。</p>\n<p><code class=\"language-text\">applications/electron/dist/&lt;OS>-unpackaged</code> 文件夹包含对应操作系统的可执行文件。</p>\n<p>对于 Linux 来说，这是一个可执行的 <code class=\"language-text\">.AppImage</code>，对于Windows来说是一个 <code class=\"language-text\">.exe</code> 安装程序，而对 macOS 来说是一个 <code class=\"language-text\">.dmg</code> 安装包。</p>\n<p>也可以通过运行 <code class=\"language-text\">yarn electron package:preview</code> 避免打包过程，这方便查看 bundle 文件，与完整的打包流程相比，更加节省时间。</p>\n<p>可以用 <code class=\"language-text\">yarn electron deploy</code> 命令发布当前版本。</p>\n<p>关于发布的更多信息，请参见 \"配置发布和更新\" 小节。</p>\n<h2 id=\"应用包签名\" style=\"position:relative;\"><a href=\"#%E5%BA%94%E7%94%A8%E5%8C%85%E7%AD%BE%E5%90%8D\" aria-label=\"应用包签名 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>应用包签名</h2>\n<p><a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Electron-builder</a> 支持在 Windows 和 macOS 上对打包的应用进行签名。\nTheia Blueprint 的当前签名脚本位于 <code class=\"language-text\">applications/electron/scripts</code> 中的 <code class=\"language-text\">after-pack.js</code>，也是 Eclipse 默认配置签名的入口。</p>\n<p>但是，由于签名高度依赖于你的设定，请参阅 <a href=\"https://www.electron.build/code-signing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron builder 的签名文档</a>，了解如何正确设置自己的签名。</p>\n<h2 id=\"updating-bundled-vs-code-extensions\" style=\"position:relative;\"><a href=\"#updating-bundled-vs-code-extensions\" aria-label=\"updating bundled vs code extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Updating Bundled VS Code Extensions</h2>\n<p>包含在产品中的 VS Code 扩展都在 <code class=\"language-text\">applications/electron/package.json</code> 中定义，它们以 K-V 键值对的形式配置在 <code class=\"language-text\">theiaPlugins</code> 中。</p>\n<p>可以自由选择扩展路径，只要是有效的文件夹名称并在 <code class=\"language-text\">theiaPlugins</code> 配置中是唯一的即可，我们建议使用扩展程序的唯一标识符，该值是扩展的下载 URL，它在应用构建过程中自动下载，后续执行以下 npm 脚本之一时，都会自动下载新插件：</p>\n<ul>\n<li><code class=\"language-text\">install</code> (等同于 <code class=\"language-text\">yarn</code>)</li>\n<li><code class=\"language-text\">prepare</code></li>\n<li><code class=\"language-text\">download:plugins</code></li>\n</ul>\n<p>要从产品中删除扩展，只需删除其条目即可，如果尚未下载插件，则不需要进一步操作，因为下载的插件会被 gitignore 忽略，但以前下载的插件不会自动删除，需要从 <code class=\"language-text\">applications/electron/plugins</code> 文件夹中手动删除整个文件夹。或者，可以删除整个 <code class=\"language-text\">applications/electron/plugins</code> 文件夹并执行 <code class=\"language-text\">yarn electron download:plugins</code> 下载所有插件。</p>\n<h3 id=\"扩展之源\" style=\"position:relative;\"><a href=\"#%E6%89%A9%E5%B1%95%E4%B9%8B%E6%BA%90\" aria-label=\"扩展之源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>扩展之源</h3>\n<p>我们使用 Eclipse Foundation 的 <a href=\"https://open-vsx.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Open VSX Registry</a> 来安装扩展，它是由开源社区驱动的 VS Code 扩展市场，更多信息在 <a href=\"https://www.eclipse.org/legal/open-vsx-registry-faq/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eclipse.org</a> 上找到。</p>\n<h2 id=\"自定义-theia-扩展\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89-theia-%E6%89%A9%E5%B1%95\" aria-label=\"自定义 theia 扩展 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义 Theia 扩展</h2>\n<p>Eclipse Theia 扩展可以通过 <code class=\"language-text\">applications/electron/package.json</code> 中的 <code class=\"language-text\">dependencies</code> 添加，像其他依赖一样，用 yarn 来安装和删除，对于已经在 npm（或你的私有 npm 注册表）上发布的扩展，除了这些操作再无其他。</p>\n<p>另一种方法是在 Theia Blueprint 的 monorepo 中开发自己的扩展，这样的好处是不需要发布扩展，并且可以使用本地版本的扩展构建产品，Theia Blueprint 的仓库的 lerna 配置有助于实现这一点，它在构建期间将产品和仓库中的扩展链接在一起。</p>\n<p>创建新扩展的最简单方法是使用 Theia 的 <a href=\"https://www.npmjs.com/package/generator-theia-extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">official yeoman generator</a>，假设你的系统上全局安装了 <a href=\"https://yeoman.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">yeoman</a>，只需使用 <code class=\"language-text\">yo theia-extension --standalone</code> 即可在仓库根目录中创建新扩展。<code class=\"language-text\">--standalone</code> 标志仅用于创建扩展而不是整个 Theia 应用框架，因为它已由 Theia 蓝图提供。扩展生成后，将文件夹名称添加到 Theia Blueprint 根 <code class=\"language-text\">package.json</code> 的 workspaces 配置中，如上所述将扩展添加到 <code class=\"language-text\">applications/electron/package.json</code> 中的依赖后，新扩展将成为构建产品的一部分。</p>\n<h2 id=\"品牌推广\" style=\"position:relative;\"><a href=\"#%E5%93%81%E7%89%8C%E6%8E%A8%E5%B9%BF\" aria-label=\"品牌推广 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>品牌推广</h2>\n<p>你还可以自定义应用的图标、标题、欢迎页和 About 对话框，将自己的品牌添加到产品中，此外，安装程序的其他部分也可以自定义。</p>\n<h3 id=\"自定义应用\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BA%94%E7%94%A8\" aria-label=\"自定义应用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义应用</h3>\n<h4 id=\"应用窗口标题\" style=\"position:relative;\"><a href=\"#%E5%BA%94%E7%94%A8%E7%AA%97%E5%8F%A3%E6%A0%87%E9%A2%98\" aria-label=\"应用窗口标题 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>应用窗口标题</h4>\n<p>如果没有打开工作区，窗口标题默认是应用的名称，如果打开了工作区，则是<code class=\"language-text\">&lt;工作区名称> - &lt;应用程序名称></code>，应用的名称可以在 <code class=\"language-text\">applications/electron/package.json</code> 中调整，打开该文件，将属性 <code class=\"language-text\">theia.frontend.config.applicationName</code> 的值改为理性的名称即可。</p>\n<h4 id=\"应用-icon\" style=\"position:relative;\"><a href=\"#%E5%BA%94%E7%94%A8-icon\" aria-label=\"应用 icon permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>应用 Icon</h4>\n<p>应用的图标位于 <code class=\"language-text\">applications/electron/resources/</code> 中，可用自己的图标将其替换，由于每个操作系统处理图标的方式不同，它们都应该被替换以确保正确使用，它们的对应关系如下：</p>\n<ul>\n<li>macOS: icons.icns</li>\n<li>Windows: icon.ico</li>\n<li>Linux: icons subfolder</li>\n</ul>\n<h3 id=\"自定义欢迎页\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AC%A2%E8%BF%8E%E9%A1%B5\" aria-label=\"自定义欢迎页 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义欢迎页</h3>\n<p>欢迎页可以通过 <code class=\"language-text\">GettingStartedWidget</code> 绑定一个自定义的 <code class=\"language-text\">WidgetFactory</code> 来定制，在 Theia Blueprint 中是用 Theia-Blueprint-product 扩展实现的。</p>\n<p>定制欢迎页面的最简单的方法是更改 <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-getting-started-widget.tsx</code> 中的<code class=\"language-text\">TheiaBlueprintGettingStartedWidget</code> 类。</p>\n<p>此 widget 在 <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-frontend-module.ts</code> 中被绑定，像这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">    <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>TheiaBlueprintGettingStartedWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSelf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>WidgetFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDynamicValue</span><span class=\"token punctuation\">(</span>context <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> GettingStartedWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">ID</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">createWidget</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> context<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>TheiaBlueprintGettingStartedWidget<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>TheiaBlueprintGettingStartedWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>要使用自己的 widget，请删除此代码并绑定自己的即可。</p>\n<h3 id=\"定制-about-弹框\" style=\"position:relative;\"><a href=\"#%E5%AE%9A%E5%88%B6-about-%E5%BC%B9%E6%A1%86\" aria-label=\"定制 about 弹框 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>定制 About 弹框</h3>\n<p>通过绑定 <code class=\"language-text\">AboutDialog</code> 类的自定义子类可以定制 Theia 的 About 弹框，在 Theia Blueprint中，这是用 Theia-blue-product 扩展实现的。</p>\n<p>定制 About 弹框的最简单的方法是更改 <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-about-dialog.tsx</code> 中的<code class=\"language-text\">TheiaBlueprintAboutDialog</code> 类。</p>\n<p>该 widget 在 <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-frontend-module.ts</code>中像这样绑定：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">isBound</span><span class=\"token punctuation\">(</span>AboutDialog<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">rebind</span><span class=\"token punctuation\">(</span>AboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>TheiaBlueprintAboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>AboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>TheiaBlueprintAboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>要用自定义的About 弹框 widget，请删除这段代码，扩展 Theia 的 AboutDialog 类，并像上面那样（重新）绑定。</p>\n<h3 id=\"自定义安装程序\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F\" aria-label=\"自定义安装程序 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义安装程序</h3>\n<p>安装器是用 <a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder</a> 创建的，相应的配置文件位于 <code class=\"language-text\">applications/electron/electron-builder.yml</code>。</p>\n<h4 id=\"安装包名称\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85%E5%8C%85%E5%90%8D%E7%A7%B0\" aria-label=\"安装包名称 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装包名称</h4>\n<p>安装文件的名称由 <code class=\"language-text\">applications/electron/electron-builder.yml</code> 中的 <code class=\"language-text\">productName</code> 属性定义。</p>\n<h4 id=\"windows-installer\" style=\"position:relative;\"><a href=\"#windows-installer\" aria-label=\"windows installer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows Installer</h4>\n<p>和 Windows 的应用安装一样，Theia Blueprint 的 Windows 版本也有一个安装向导，是在配置文件的 nsis 部分配置的，可定制以下设置：</p>\n<ul>\n<li>Icons</li>\n<li>Sidebar image</li>\n<li>License</li>\n<li>One click installation</li>\n<li>Automatic application start after installation</li>\n<li>Whether users can change the installation directory</li>\n</ul>\n<p>关于更多可配置选项以及如何定制这些选项，可以在<a href=\"https://www.electron.build/configuration/nsis\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方 electron builder 文档</a> 中找到，该文档还包括其他高级功能，如自定义 NSIS 脚本。</p>\n<h2 id=\"配置发布和更新\" style=\"position:relative;\"><a href=\"#%E9%85%8D%E7%BD%AE%E5%8F%91%E5%B8%83%E5%92%8C%E6%9B%B4%E6%96%B0\" aria-label=\"配置发布和更新 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置发布和更新</h2>\n<p>Theia Blueprint 使用 <a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder</a>，它还使用由 electron-builder 组织开发的 <a href=\"https://www.npmjs.com/package/electron-updater\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-updater</a> 提供应用的自动更新。</p>\n<p>部署方式，可在<code class=\"language-text\">applications/electron/package.json</code> 和 <code class=\"language-text\">applications/electron/electron-builder.yml</code> 中配置，在 Electron Builder <a href=\"https://www.electron.build/configuration/publish\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">文档中</a>有说明。</p>\n<p>还可以配置多个发布配置，第一个配置会被更新器自动使用，以寻找可用的更新，目前使用的默认发布方法不会自动发布到指定的服务器上，只是作为更新器的查找地址。</p>","fields":{"slug":"blueprint_documentation"}}},"pageContext":{"slug":"blueprint_documentation"}},"staticQueryHashes":["2468095761"]}