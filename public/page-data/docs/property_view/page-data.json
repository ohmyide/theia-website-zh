{"componentChunkName":"component---src-templates-doc-js","path":"/docs/property_view","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Property View"},"html":"<h1 id=\"属性视图\" style=\"position:relative;\"><a href=\"#%E5%B1%9E%E6%80%A7%E8%A7%86%E5%9B%BE\" aria-label=\"属性视图 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>属性视图</h1>\n<p>很多 IDE（例如传统的 Eclipse IDE）都具有全局、可扩展属性视图的概念，它显示 IDE 当前选中元素的附加信息，属性视图在这些 IDE 中大量使用，用于在图表编辑器、复杂树编辑器或文件浏览器中显示元素的详细信息。我们的想法是在 IDE 中拥有一个全局的、通用的属性视图，也允许扩展全局属性视图的内容，并为某些元素类型的选择提供特定的附加信息展示。</p>\n<p><code class=\"language-text\">@theia/property-view extension</code> 是 Theia 内置的通用全局属性视图，属性视图 widget 可以通过菜单 <code class=\"language-text\">View->Properties</code> 或快捷键 <kbd>Shift</kbd>+<kbd>Alt</kbd>+<kbd>P</kbd> 触发。它默认位于底部停靠区，此扩展中实现了以下两个默认内容的 widget：</p>\n<ul>\n<li><code class=\"language-text\">EmptyPropertyViewWidget</code>: 如果没有可用的 widget，会提示 (<code class=\"language-text\">No properties available</code>)。</li>\n<li><code class=\"language-text\">ResourcePropertyViewWidget</code>: 显示在文件资源管理器或当前 Monaco 编辑器选中文件的额外信息（如位置、名称、最后修改）。</li>\n</ul>\n<h2 id=\"贡献自定义属性视图\" style=\"position:relative;\"><a href=\"#%E8%B4%A1%E7%8C%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7%E8%A7%86%E5%9B%BE\" aria-label=\"贡献自定义属性视图 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>贡献自定义属性视图</h2>\n<p>为贡献特定的属性视图，需要实现 <code class=\"language-text\">PropertyViewDataService</code>，它收集供选择的属性数据，以及<code class=\"language-text\">PropertyViewWidgetProvider</code>，它提供合适的 widget 来显示属性视图内所选的属性数据。</p>\n<p>下面的案例将简单的演示基于 ReactWidget 的自定义视图，其功能是根据文件资源管理器的当前选择，显示对应的名称以及它是一个文件还是目录（当然，这里假设没有<code class=\"language-text\">ResourcePropertyViewWidget</code>）。</p>\n<p><code class=\"language-text\">FileInfoPropertyDataService</code> 收集文件信息并提供一个自定义对象。</p>\n<p><code class=\"language-text\">custom-data-service.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FileInfoPropertyObject</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    isDirectory<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInfoPropertyDataService</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">PropertyDataService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">readonly</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'fileinfo'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">readonly</span> label <span class=\"token operator\">=</span> <span class=\"token string\">'FileInfoPropertyDataService'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">inject</span></span><span class=\"token punctuation\">(</span>LabelProvider<span class=\"token punctuation\">)</span> <span class=\"token keyword\">protected</span> <span class=\"token keyword\">readonly</span> labelProvider<span class=\"token operator\">:</span> LabelProvider<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">canHandleSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>selection <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> FileSelection<span class=\"token punctuation\">.</span><span class=\"token keyword\">is</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token function\">providePropertyData</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>FileInfoPropertyObject <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                name<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>labelProvider<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fileStat<span class=\"token punctuation\">.</span>resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                isDirectory<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fileStat <span class=\"token keyword\">as</span> FileStat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isDirectory\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">FileInfoPropertyWidget</code> 是个简单的 <code class=\"language-text\">ReactWidget</code> 用于显示所选节点以及它是一个文件还是目录：</p>\n<p><code class=\"language-text\">custom-content-widget.tsx</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInfoPropertyViewWidget</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ReactWidget</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">PropertyViewContentWidget</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token constant\">ID</span> <span class=\"token operator\">=</span> <span class=\"token string\">'file-info-property-view'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token constant\">LABEL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'File Information'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> currentFileInfo<span class=\"token operator\">:</span> FileInfoPropertyObject<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">ID</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span>label <span class=\"token operator\">=</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">LABEL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span>caption <span class=\"token operator\">=</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">LABEL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span>closable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>tabIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">updatePropertyViewContent</span><span class=\"token punctuation\">(</span>propertyDataService<span class=\"token operator\">?</span><span class=\"token operator\">:</span> PropertyDataService<span class=\"token punctuation\">,</span> selection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propertyDataService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            propertyDataService<span class=\"token punctuation\">.</span><span class=\"token function\">providePropertyData</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fileInfo<span class=\"token operator\">:</span> FileInfoPropertyObject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFileInfo <span class=\"token operator\">=</span> fileInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Selected node in explorer: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFileInfo<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFileInfo<span class=\"token punctuation\">.</span>isDirectory <span class=\"token operator\">?</span> <span class=\"token string\">'(Directory)'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'(File)'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">FileInfoPropertyViewWidgetProvider</code> 负责根据选择提供正确的 <code class=\"language-text\">PropertyViewContentWidget</code>。</p>\n<p><code class=\"language-text\">custom-widget-provider.ts</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInfoPropertyViewWidgetProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DefaultPropertyViewWidgetProvider</span> <span class=\"token punctuation\">{</span>\n\n    override <span class=\"token keyword\">readonly</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'fileinfo'</span><span class=\"token punctuation\">;</span>\n    override <span class=\"token keyword\">readonly</span> label <span class=\"token operator\">=</span> <span class=\"token string\">'FileInfoPropertyViewWidgetProvider'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> fileInfoWidget<span class=\"token operator\">:</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInfoWidget <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInfoPropertyViewWidget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    override <span class=\"token function\">canHandle</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>selection <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> FileSelection<span class=\"token punctuation\">.</span><span class=\"token keyword\">is</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    override <span class=\"token function\">provideWidget</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>FileInfoPropertyViewWidget<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInfoWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    override <span class=\"token function\">updateContentWidget</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyDataService</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>service <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInfoWidget<span class=\"token punctuation\">.</span><span class=\"token function\">updatePropertyViewContent</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">,</span> selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在应用的前端模块中，<code class=\"language-text\">FileInfoPropertyDataService</code> 以及 <code class=\"language-text\">FileInfoPropertyViewWidgetProvider</code> 按如下方式注册：</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>PropertyDataService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>FileInfoPropertyDataService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>PropertyViewWidgetProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>FileInfoPropertyViewWidgetProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>根据这几个步骤，读者应该知道如何实现自定义属性视图，本质是由特定的 <code class=\"language-text\">PropertyViewWidgetProvider</code> 和 <code class=\"language-text\">PropertyViewDataService</code> 组成。</p>\n<p>最终属性视图运行效果如下：</p>\n<img src=\"/custom-property-view.gif\" alt=\"Property View - custom widget\" style=\"max-width: 690px\">","fields":{"slug":"property_view"}}},"pageContext":{"slug":"property_view"}},"staticQueryHashes":["2468095761"]}